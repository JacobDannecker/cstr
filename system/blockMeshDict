/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;

refinement 4;

cellsX0 #calc "37 * $refinement"; // Blocks 0 4
cellsX1 #calc "60 * $refinement"; // Blocks 1 2 3

cellsY0 #calc "20 * $refinement"; // Blocks 0 1 3 4
cellsY1 #calc "10 * $refinement"; // Block 2

// Inner Blocks
gradingInner0 8;
gradingOuter0 0.125;

// Outer Blocks
gradingInner1 0.125;
gradingOuter1 8; 

// Grading radial
gradingRad 10;
gradingRadRev 0.1; 

vertices
(
 	// Bottom
 	(8 0 0)		// 0
	(20 0 0)	// 1
	(14.75 13.51 0)	// 2
	(5.90 5.40 0)	// 3
	(40 0 0)	// 4
	(29.49 27.02 0)	// 5
	(27.02 29.49 0) // 6
	(13.51 14.75 0) // 7
	(0 40 0)	// 8
	(0 20 0)	// 9 
	(0 8 0)		// 10
	(5.40 5.90 0) 	// 11
	// Top 
	(8 0 1)		// 12
	(20 0 1)	// 13
	(14.75 13.51 1) // 14
	(5.90 5.40 1)	// 15
	(40 0 1)	// 16
	(29.49 27.02 1)	// 17
	(27.02 29.49 1) // 18
	(13.51 14.75 1) // 19
	(0 40 1)	// 20
	(0 20 1)	// 21
	(0 8 1)		// 22
	(5.40 5.90 1) 	// 23

);

blocks
(
    hex (0 1 2 3 12 13 14 15) ($cellsX0 $cellsY0 1) simpleGrading (
	     (
		     	(1 1 $gradingInner0)
		     	(1 1 $gradingOuter0)
	     )
 	     (
	      		(1 1 $gradingRadRev)
	     )	     
		    	1
	) // 0 

    hex (5 2 1 4 17 14 13 16) ($cellsX1 $cellsY0 1) (
	     (
	    	      	(1 1 $gradingOuter1)
	     		(1 1 $gradingInner1)
	     )
	     (
	      		(1 1 $gradingRad)
	     )
	    		1
	) // 1 

    hex (6 7 2 5 18 19 14 17) ($cellsX1 $cellsY1 1) (
	     (
			(1 1 $gradingOuter1)
	     		(1 1 $gradingInner1)
	     )
		    	1
		    	1
	) // 2 

    hex (8 9 7 6 20 21 19 18) ($cellsX1 $cellsY0 1) (
	     (
			(1 1 $gradingOuter1)
	     		(1 1 $gradingInner1)
	     )
	     (
	      		(1 1 $gradingRadRev)
	     )	     
	    	1
	) // 3 

    hex (11 7 9 10 23 19 21 22) ($cellsX0 $cellsY0 1) simpleGrading (
	     (
		     	(1 1 $gradingInner0)
		     	(1 1 $gradingOuter0)

	     )
	     ( 
	      		(1 1 $gradingRad)
	     )
		       	1
	) // 4 

);


edges
(
    arc 0 3  (7.4561 2.9000 0)
    arc 1 2  (18.6402 7.2488 0)
    arc 4 5  (37.2803 14.4975 0)
    arc 5 6  (28.2843 28.2843  0)
    arc 6 8  (14.4975 37.2803 0)
    arc 7 9  (7.2488 18.6402 0)
    arc 11 10 (2.9000 7.4561 0)
    arc 12 15  (7.4561 2.9000 1)
    arc 13 14  (18.6402 7.2488 1)
    arc 16 17  (37.2803 14.4975 1) 
    arc 17 18  (28.2843 28.2843 1)
    arc 18 20  (14.4975 37.2803 1)
    arc 19 21  (7.2488 18.6402 1)
    arc 23 22  (2.9000 7.4561  1)


);


boundary
(
    right 
    {
        type cyclic;
	neighbourPatch left;
	transformType rotational;
	rotationAxis (0 0 1);
	rotationCentre (0 0 0);
        faces
        (
            (0 1 13 12)
	    (1 4 16 13)
        );
    }

    left 
    {
	type cyclic;
	neighbourPatch right;
	transformType rotational;
	rotationAxis (0 0 1);
	rotationCentre (0 0 0);
	faces
        (
	    (10 22 21 9)
	    (9 21 20 8)
        );
    }

    outerWall
    {
        type wall;
        faces
        (
            (4 16 17 5)
	    (5 17 18 6)
	    (6 18 20 8)
     
        );
    }
    stirrerWall
    {
        type wall;
        faces
        (
            (3 15 12 0)
	    (2 14 15 3)
	    (7 19 14 2)
	    (11 23 19 7)
    	    (10 22 23 11)
	    
     
        );
    }

    top
    {
        type empty;
        faces
        (
            (0 1 2 3)
            (1 4 5 2)
	    (2 5 6 7)
	    (7 6 8 9)
	    (9 10 11 7)
	    
        );

    }
    bottom
    {
        type empty;
        faces
        (
	    (12 13 14 15)
	    (13 16 17 14)
	    (14 17 18 19)
	    (19 18 20 21)
	    (21 22 23 19)
        );

    }
);


// ************************************************************************* //
